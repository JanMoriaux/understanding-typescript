// Exercise 1 - Maybe use an Arrow Function?
const double = (val: number): number => val * 2;
console.log(double(10));

// Exercise 2 - If only we could provide some default values...
const greetz = (name: string = "Max"): void => {
  console.log(`Hello, ${name}`);
};
greetz();
greetz("Anna");

// Exercise 3 - Isn't there a shorter way to get all these Values?
const numberz: number[] = [-3, 33, 38, 5];

console.log(Math.min(...numberz));

// Exercise 4 - I have to think about Exercise 3 ...
let newArray: number[] = [55, 20];
// Array.prototype.push.apply(newArray, numberz);
newArray.push(...numberz);
console.log(newArray);

// Exercise 5 - That's a well-constructed array.
const testResults: number[] = [3.89, 2.99, 1.38];
const [result1, result2, result3] = testResults;
console.log(result1, result2, result3);

// Exercise 6 - And a well-constructed object!
type Scientist = { firstName: string; experience: number };
const scientist: Scientist = {
  firstName: "Will",
  experience: 12
};
const { firstName, experience } = scientist;
console.log(firstName, experience);
